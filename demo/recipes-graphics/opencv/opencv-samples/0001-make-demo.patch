From f1fad22df174b38a4702ee8389815885b8b61678 Mon Sep 17 00:00:00 2001
From: Dmitry Shifrin <dmitry.shifrin@cogentembedded.com>
Date: Thu, 8 Oct 2015 15:32:46 +0300
Subject: [PATCH] make demo

---
 samples/c/delaunay.c     | 21 ++++++++++++++---
 samples/c/facedetect.cpp | 61 ++++++++++++++++++++++++++++++++++++++++++------
 2 files changed, 72 insertions(+), 10 deletions(-)

diff --git a/samples/c/delaunay.c b/samples/c/delaunay.c
index 21fe340..a294cf6 100644
--- a/samples/c/delaunay.c
+++ b/samples/c/delaunay.c
@@ -171,6 +171,20 @@ static void paint_voronoi( CvSubdiv2D* subdiv, IplImage* img )
 }
 
 
+static int pressed_mouse=0;
+
+static void onMouse( int event, int x, int y, int, void* ){
+
+    using namespace cv;
+
+    if( event != EVENT_LBUTTONDOWN )
+        return;
+
+    pressed_mouse = 1;
+
+}
+
+
 static void run(void)
 {
     char win[] = "source";
@@ -190,6 +204,7 @@ static void run(void)
     cvSet( img, bkgnd_color, 0 );
 
     cvNamedWindow( win, 1 );
+    cvSetMouseCallback( win, onMouse, 0 );
 
     storage = cvCreateMemStorage(0);
     subdiv = init_delaunay( storage, rect );
@@ -205,7 +220,7 @@ static void run(void)
         locate_point( subdiv, fp, img, active_facet_color );
         cvShowImage( win, img );
 
-        if( cvWaitKey( 100 ) >= 0 )
+        if( cvWaitKey( 100 ) >= 0  || pressed_mouse)
             break;
 
         cvSubdivDelaunay2DInsert( subdiv, fp );
@@ -214,7 +229,7 @@ static void run(void)
         draw_subdiv( img, subdiv, delaunay_color, voronoi_color );
         cvShowImage( win, img );
 
-        if( cvWaitKey( 100 ) >= 0 )
+        if( cvWaitKey( 100 ) >= 0 || pressed_mouse)
             break;
     }
 
@@ -222,7 +237,7 @@ static void run(void)
     paint_voronoi( subdiv, img );
     cvShowImage( win, img );
 
-    cvWaitKey(0);
+    if (!pressed_mouse) cvWaitKey(0);
 
     cvReleaseMemStorage( &storage );
     cvReleaseImage(&img);
diff --git a/samples/c/facedetect.cpp b/samples/c/facedetect.cpp
index a7d7f4a..6f735fc 100644
--- a/samples/c/facedetect.cpp
+++ b/samples/c/facedetect.cpp
@@ -34,6 +34,20 @@ void detectAndDraw( Mat& img, CascadeClassifier& cascade,
 string cascadeName = "../../data/haarcascades/haarcascade_frontalface_alt.xml";
 string nestedCascadeName = "../../data/haarcascades/haarcascade_eye_tree_eyeglasses.xml";
 
+
+static int pressed_mouse=0;
+
+static void onMouse( int event, int x, int y, int, void* ){
+
+    if( event != EVENT_LBUTTONDOWN )
+        return;
+
+    pressed_mouse = 1;
+
+}
+
+using namespace cv;
+double rez_x=0, rez_y=0;
 int main( int argc, const char** argv )
 {
     CvCapture* capture = 0;
@@ -95,10 +109,14 @@ int main( int argc, const char** argv )
         return -1;
     }
 
-    if( inputName.empty() || (isdigit(inputName.c_str()[0]) && inputName.c_str()[1] == '\0') )
+    if( inputName.empty() || (isdigit(inputName.c_str()[0]) && inputName.c_str()[1] == '\0')
+            || (isdigit(inputName.c_str()[0]) && isdigit(inputName.c_str()[1]) && inputName.c_str()[2] == '\0')  )
     {
-        capture = cvCaptureFromCAM( inputName.empty() ? 0 : inputName.c_str()[0] - '0' );
         int c = inputName.empty() ? 0 : inputName.c_str()[0] - '0' ;
+        if (!inputName.empty() && inputName.c_str()[1] != '\0'){
+            c = c*10 + inputName.c_str()[1] - '0';
+        }
+        capture = cvCaptureFromCAM( inputName.empty() ? 0 : inputName.c_str()[0] - '0' );
         if(!capture) cout << "Capture from CAM " <<  c << " didn't work" << endl;
     }
     else if( inputName.size() )
@@ -116,13 +134,41 @@ int main( int argc, const char** argv )
         if(image.empty()) cout << "Couldn't read lena.jpg" << endl;
     }
 
-    cvNamedWindow( "result", 1 );
 
+
+    cvNamedWindow( "result", 0 );
     if( capture )
     {
+
+
+    	//rez_x = cvGetCaptureProperty( capture, CV_CAP_PROP_FRAME_WIDTH );
+    	//rez_y = cvGetCaptureProperty( capture, CV_CAP_PROP_FRAME_HEIGHT );
+    
+    	IplImage* img = cvQueryFrame( capture );
+	rez_x = img->width;
+	rez_y = img->height;
+
+	resizeWindow("result", rez_x, rez_y);
+
+    	if(rez_x<=0 || rez_y<=0) {
+		cout << "Could not get camera resolution" << endl;
+		return (-1);
+    	}
+    	rez_x = rez_x / 320 * 40.0;
+	rez_y = rez_y / 200 * 40.0;
+	cout << "Rezolution coefficient: " << rez_x << " : " << rez_y << endl;
+    }
+
+
+    cvSetMouseCallback( "result", onMouse, 0 );
+
+    if( capture )
+    {
+
         cout << "In capture ..." << endl;
         for(;;)
         {
+
             IplImage* iplImg = cvQueryFrame( capture );
             frame = iplImg;
             if( frame.empty() )
@@ -134,7 +180,7 @@ int main( int argc, const char** argv )
 
             detectAndDraw( frameCopy, cascade, nestedCascade, scale, tryflip );
 
-            if( waitKey( 10 ) >= 0 )
+            if( waitKey( 10 ) >= 0 || pressed_mouse)
                 goto _cleanup_;
         }
 
@@ -189,6 +235,7 @@ _cleanup_:
     return 0;
 }
 
+
 void detectAndDraw( Mat& img, CascadeClassifier& cascade,
                     CascadeClassifier& nestedCascade,
                     double scale, bool tryflip )
@@ -212,12 +259,12 @@ void detectAndDraw( Mat& img, CascadeClassifier& cascade,
 
     t = (double)cvGetTickCount();
     cascade.detectMultiScale( smallImg, faces,
-        1.1, 2, 0
+        1.3, 2, 0
         //|CV_HAAR_FIND_BIGGEST_OBJECT
         //|CV_HAAR_DO_ROUGH_SEARCH
         |CV_HAAR_SCALE_IMAGE
         ,
-        Size(30, 30) );
+        Size(rez_x, rez_y) );
     if( tryflip )
     {
         flip(smallImg, smallImg, 1);
@@ -274,5 +321,5 @@ void detectAndDraw( Mat& img, CascadeClassifier& cascade,
             circle( img, center, radius, color, 3, 8, 0 );
         }
     }
-    cv::imshow( "result", img );
+    imshow("result", img);
 }
-- 
1.9.1

